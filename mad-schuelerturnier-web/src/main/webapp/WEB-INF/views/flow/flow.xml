<?xml version="1.0" encoding="UTF-8"?>

<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">

    <!-- Log In -->
    <var name="loginBean" class="com.googlecode.madschuelerturnier.web.security.LoginBean"/>

    <decision-state id="start">
        <!-- durchfuehren des logins im falle eines autologons-->
        <on-entry>
            <evaluate expression="doLoginController.checkAutoLogon()"/>
        </on-entry>
        <if test="currentUser == null || ! currentUser.isAuthenticated()" then="login"/>

        <if test="!dropboxBackingBean.isConnected() AND !dropboxBackingBean.isWillNotconnect()" then="dropboxconnect"/>
        <if test="currentUser != null AND currentUser.isAuthenticated()" then="initialisieren"/>
    </decision-state>

    <view-state id="dropboxconnect" view="dropboxconnect.xhtml">
        <transition on="nodropbox" to="start" bind="true">
            <set name="flashScope.nd" value="true" type="java.lang.Boolean"/>
            <evaluate expression="dropboxBackingBean.setWillNotconnect(flashScope.nd)"/>
        </transition>
        <transition on="connect" to="start" bind="true">
            <evaluate expression="dropboxBackingBean.save()"/>
        </transition>
    </view-state>

    <view-state id="login" view="login.xhtml" model="loginBean">
        <transition on="ok" to="start" bind="true">
            <evaluate expression="doLoginController.login(flowScope.loginBean)"/>
        </transition>
        <transition on="mail" to="start" bind="true">
            <evaluate expression="linkLoginSendlinkController.loginPrepare(flowScope.loginBean)"/>
        </transition>
    </view-state>

    <!-- Init -->
    <action-state id="initialisieren">
        <evaluate expression="loginPrepareAction.execute()"/>
        <evaluate expression="startAction.start(currentUser)"/>
    </action-state>

    <view-state id="dashboard" view="dashboard.xhtml"/>

    <view-state id="user" model="flowScope.me">
<on-entry>

    <evaluate expression="DBAuthDetailService.loadUserByUsername(currentUser.principal.username)" result="flowScope.me"/>
    <evaluate expression="DBAuthUserRepository.findAll()" result="flowScope.all"/>
    <evaluate expression="modelFactory.getInstance('com.googlecode.madschuelerturnier.model.DBAuthUser')" result="flowScope.neu"/>

</on-entry>
        <transition on="save" to="back" bind="true">
            <evaluate expression="DBAuthDetailService.saveUser(flowScope.me)"/>
        </transition>

        <transition on="chpwd" to="back" bind="true">
            <evaluate expression="DBAuthDetailService.changeUsersPassword(flowScope.me)"/>
        </transition>

        <transition on="moduser" to="back" bind="true">
            <evaluate expression="DBAuthDetailService.saveUser(flowScope.all,flowScope.neu,requestParameters.id)"/>
        </transition>

        <transition on="upload" to="back" >

        </transition>

    </view-state>

    <decision-state id="back">
        <if test="1 == 1" then="user"/>

    </decision-state>

    <action-state id="newmannschaft">
        <on-entry>
            <evaluate expression="modelFactory.getInstance('com.googlecode.madschuelerturnier.model.Mannschaft')"
                      result="flowScope.mannschaftBean"/>

            <evaluate expression="mannschaftRepository.save(mannschaftBean)"
                      result="flowScope.mannschaftBean"/>
        </on-entry>
        <evaluate expression="modelFactory.ok()"/>
        <transition on="ok" to="newmannschaft_view"/>
    </action-state>

    <view-state id="newmannschaft_view" view="mannschaft/details_mannschaften.xhtml" model="mannschaftBean">
        <transition on="save" to="mannschaftsliste" bind="true">
            <evaluate expression="mannschaftRepository.save(mannschaftBean)"/>
            <evaluate expression="business.updateAutocompletesMannschaft(mannschaftBean)"/>
        </transition>
        <transition on="delete" to="mannschaftsliste" bind="true">
            <evaluate expression="business.updateAutocompletesMannschaft(mannschaftBean)"/>
            <evaluate expression="mannschaftRepository.delete(mannschaftBean.id)"/>
        </transition>
        <transition on="upload" to="newmannschaft_view" bind="true">
        </transition>
    </view-state>

    <view-state id="initialisieren_view" view="initialisieren.xhtml">
        <transition on="save" to="initialisieren">
            <evaluate expression="business.initializeDB()"/>
            <evaluate expression="business.sendDumpToRemotes()"/>
        </transition>

        <transition on="ok" to="initialisieren">
        <evaluate expression="business.sendDumpToRemotes()"/>
        </transition>

        <transition on="dropbox_chose" to="initialisieren">
            <evaluate expression="business.initializeDropbox(requestParameters.dropbox_file)"/>
            <evaluate expression="dropboxDumper.initialize()"/>
            <evaluate expression="business.sendDumpToRemotes()"/>
        </transition>


        <transition on="dropbox_chose_new" to="initialisieren">
            <evaluate expression="business.initializeDropbox(dropboxBackingBean.newfolder)"/>
            <evaluate expression="dropboxDumper.initialize()"/>
            <evaluate expression="business.sendDumpToRemotes()"/>
        </transition>


    </view-state>

    <view-state id="mannschaftsliste" view="mannschaft/liste_mannschaften.xhtml" redirect="true">
        <on-entry>
            <evaluate expression="business.getMannschaften()" result="flowScope.mannschaftList"/>
        </on-entry>
        <transition on="newmannschaft_view" to="newmannschaft_view">
            <evaluate expression="mannschaftRepositoryDelegate.findOne(requestParameters.id)"
                      result="flowScope.mannschaftBean"/>
        </transition>
    </view-state>

    <view-state id="spielsteuerung" view="spielsteuerung/admin.xhtml" redirect="true">
        <transition on="go" to="spielsteuerung">
            <evaluate expression="spielstatusWebBean.shiftSpielPhase()"/>
        </transition>

        <transition on="testmannschaften2012" to="spielsteuerung">
            <evaluate expression="dataGenerator.insertMannschaften('2012')"/>
        </transition>

        <transition on="testmannschaften2011" to="spielsteuerung">
            <evaluate expression="dataGenerator.insertMannschaften('2011')"/>
        </transition>

        <transition on="testdatenreset" to="spielsteuerung">
            <evaluate expression="dataGenerator.resetTestdata()"/>
        </transition>
    </view-state>

    <view-state id="kategorien" view="mannschaft/liste_kategorien.xhtml" redirect="true">
        <transition on="mannschaft_verschieben" to="mannschaft_verschieben"/>
        <transition on="spielwunsch_eintragen" to="spielwunsch_eintragen"/>
    </view-state>

    <action-state id="mannschaft_verschieben">
        <evaluate expression="kategorieZuordnungsAction"/>
    </action-state>

    <action-state id="spielwunsch_eintragen">
        <evaluate expression="spielwunschAction"/>
        <transition on="kategorien" to="kategorien"/>
    </action-state>

    <view-state id="spieleinstellungen" view="spielsteuerung/spieltage.xhtml" model="flowScope.spieleinstellungen">
        <on-entry>
            <set name="flashScope.tr" value="true" type="java.lang.Boolean"/>
            <set name="flashScope.fa" value="false" type="java.lang.Boolean"/>
            <evaluate expression="business.getSpielzeilen(flashScope.fa)" result="flowScope.spielZeilenSa"/>
            <evaluate expression="business.getSpielzeilen(flashScope.tr)" result="flowScope.spielZeilenSo"/>
        </on-entry>

        <transition on="save" to="spieleinstellungen" bind="true">
            <set name="flashScope.tr" value="true" type="java.lang.Boolean"/>
            <set name="flashScope.fa" value="false" type="java.lang.Boolean"/>
            <evaluate expression="business.saveEinstellungen(flowScope.spieleinstellungen)" result="flowScope.spieleinstellungen"/>
            <evaluate expression="business.initZeilen(flashScope.fa)" result="flowScope.spielZeilenSa"/>
            <evaluate expression="business.initZeilen(flashScope.tr)" result="flowScope.spielZeilenSo"/>
        </transition>

        <transition on="manuellekorrekturen" to="spieleinstellungen" bind="true">
            <evaluate expression="business.saveEinstellungen(flowScope.spieleinstellungen)"/>
            <evaluate expression="f6SpielverteilerManuelleKorrekturen.korrekturenVornehmen()"/>
        </transition>

        <transition on="toggleP" to="tagaktivieren" bind="true"/>

    </view-state>

    <action-state id="tagaktivieren">
        <evaluate expression="tagToggleAction"/>
        <transition on="weiter" to="spieleinstellungen"/>
    </action-state>

    <action-state id="speaker_reload_action">
        <on-entry>
            <set name="flowScope.outcome" value="true" type="java.lang.String"/>
        </on-entry>
        <evaluate expression="business.anstehendePenalty()" result="flowScope.penaltyAnstehend"/>
        <evaluate expression="spielDurchfuehrung.getWait()" result="flowScope.wait"/>
        <evaluate expression="spielDurchfuehrung.getText()" result="flowScope.speak"/>
        <evaluate expression="speakerReloadAction"/>
        <transition on="speaker_view" to="speaker_view"/>
    </action-state>

    <view-state id="speaker_view" view="durchfuehrung/speaker.xhtml">

        <on-render>
            <evaluate expression="business.getSpielEinstellungen()" result="flowScope.spieleinstellungen"/>
        </on-render>

        <transition on="vorbereitet" to="speaker_reload_action">
            <evaluate expression="spielDurchfuehrung.vorbereitet()"/>
        </transition>

        <transition on="refresh" to="speaker_reload_action" history="invalidate"/>


        <transition on="spielen" to="speaker_reload_action" history="invalidate">
            <evaluate expression="spielDurchfuehrung.spielen()"/>
        </transition>

        <transition on="beenden" to="speaker_reload_action">
            <evaluate expression="spielDurchfuehrung.beenden()"/>
        </transition>

    </view-state>

    <view-state id="spiel_start" view="durchfuehrung/operator.xhtml" redirect="true" model="flowScope.spieleinstellungen">
        <on-render>
            <evaluate expression="business.saveEinstellungen(flowScope.spieleinstellungen)"/>
            <evaluate expression="business.getSpielEinstellungen()" result="flowScope.spieleinstellungen"/>
        </on-render>
        <transition on="start" to="spiel_start" bind="true">
            <evaluate expression="business.saveEinstellungen(flowScope.spieleinstellungen)"/>
            <evaluate expression="business.startClock()"/>
            <evaluate expression="business.getSpielEinstellungen()" result="flowScope.spieleinstellungen"/>
        </transition>
        <transition on="stop" to="spiel_start" bind="true">
            <evaluate expression="business.saveEinstellungen(flowScope.spieleinstellungen)"/>
            <evaluate expression="business.stopClock()"/>
        </transition>

        <transition on="setmaster" to="spiel_start" bind="true">
            <evaluate expression="integrationControllerImpl.thisMaster()"/>
        </transition>

    </view-state>

    <view-state id="eintrager" view="durchfuehrung/eintrager.xhtml" redirect="true">
        <on-render>
            <evaluate expression="business.anstehendePenalty()" result="flowScope.penaltyAnstehend"/>
            <evaluate expression="spielRepositoryDelegate.findAllEinzutragende()" result="flowScope.einzutragende"/>
        </on-render>
        <transition on="save" to="eintrager">
            <evaluate expression="spielRepositoryDelegate.eintragen(flowScope.einzutragende,requestParameters.id)"/>
            <evaluate expression="spielRepositoryDelegate.findAllEinzutragende()" result="flowScope.einzutragende"/>
        </transition>
        <transition on="saveP" to="eintrager">
            <evaluate expression="business.penaltyEintragen(flowScope.penaltyAnstehend)"/>
        </transition>
        <transition on="upload" to="eintrager" bind="true">
        </transition>
    </view-state>

    <view-state id="webcam" view="durchfuehrung/webcam.xhtml" redirect="true">
    </view-state>

    <view-state id="v_historie" view="beobachter/historie.xhtml" redirect="true"/>

    <view-state id="v_matrix" view="beobachter/matrix.xhtml" redirect="true"/>

    <view-state id="v_schiri" view="beobachter/schiri.xhtml" redirect="true"/>

    <view-state id="v_rangliste" view="beobachter/rangliste.xhtml" redirect="true"/>

    <view-state id="import-export" view="mannschaft/export.xhtml" redirect="true"/>

    <view-state id="kontrollierer" view="durchfuehrung/kontrollierer.xhtml" redirect="true">
        <on-render>
            <evaluate expression="spielRepositoryDelegate.findAllZuBestaetigen()" result="flowScope.bestaetigen"/>
        </on-render>
        <transition on="save" to="kontrollierer">
            <evaluate
                    expression="spielRepositoryDelegate.bestaetigen(flowScope.bestaetigen,requestParameters.id,requestParameters.ok)"/>
            <evaluate expression="spielRepositoryDelegate.findAllZuBestaetigen()" result="flowScope.bestaetigen"/>
        </transition>
    </view-state>

    <view-state id="liste_korrekturen" view="mannschaft/liste_korrekturen.xhtml">
        <transition on="detail_korrektur" to="detail_korrekturen">
            <evaluate expression="conversionUtil.stringToLong(requestParameters.id)" result="flowScope.idLong"/>
            <evaluate expression="korrekturRepository.findOne(flowScope.idLong)" result="flowScope.korrekturd"/>
        </transition>
        <transition on="delete" to="liste_korrekturen" bind="true">
            <evaluate expression="conversionUtil.stringToLong(requestParameters.id)" result="flowScope.idLong"/>
            <evaluate expression="korrekturRepository.findOne(flowScope.idLong)" result="flowScope.del"/>
            <evaluate expression="korrekturRepository.delete(flowScope.del)"/>
            <evaluate expression="korrekturRepository.findAll()" result="flowScope.korrekturen"/>
        </transition>
        <transition on="new" to="detail_korrekturen">
            <evaluate expression="modelFactory.getInstance('com.googlecode.madschuelerturnier.model.Korrektur')"
                      result="flowScope.korrekturd"/>
        </transition>
    </view-state>

    <view-state id="detail_korrekturen" view="mannschaft/detail_korrekturen.xhtml" model="flowScope.korrekturd">
        <transition on="save" to="liste_korrekturen" bind="true">
            <evaluate expression="korrekturRepository.save(flowScope.korrekturd)" result="flowScope.idLong"/>
            <evaluate expression="korrekturRepository.findAll()" result="flowScope.korrekturen"/>
        </transition>
    </view-state>

    <view-state id="liste_spiel" view="root/liste_spiele.xhtml" redirect="true">
        <transition on="show" to="edit_spiel">
            <evaluate expression="spielServiceImpl.findSpiel(requestParameters.id)" result="flowScope.spiel"/>
        </transition>
    </view-state>

    <view-state id="liste_sessions" view="root/liste_sessions.xhtml" redirect="true">

    </view-state>

    <view-state id="edit_spiel" view="root/detail_spiele.xhtml" redirect="true" model="spiel">
        <transition on="save" to="liste_spiel" bind="true">
            <evaluate expression="spielServiceImpl.doKorrektur(spiel)"/>
            <evaluate expression="spielServiceImpl.readAllSpiele()" result="flowScope.spiele"/>
        </transition>
    </view-state>

    <global-transitions>

        <transition on="user" to="user"/>

        <transition on="dashboard" to="dashboard"/>

        <transition on="initialisieren" to="initialisieren_view"/>


        <transition on="newmannschaft" to="newmannschaft"/>

        <transition on="mannschaftsliste" to="mannschaftsliste"/>

        <transition on="gt_historie" to="v_historie"/>
        <transition on="gt_matrix" to="v_matrix"/>
        <transition on="gt_schiri" to="v_schiri"/>
        <transition on="gt_rangliste" to="v_rangliste"/>

        <transition on="gt_resultatekorrekturen" to="liste_spiel">
            <evaluate expression="spielServiceImpl.readAllSpiele()" result="flowScope.spiele"/>
        </transition>

        <transition on="import-export" to="import-export"/>

        <transition on="korrekturen" to="liste_korrekturen">
            <evaluate expression="korrekturRepository.findAll()" result="flowScope.korrekturen"/>
        </transition>

        <transition on="spieleinstellungen" to="spieleinstellungen">
            <evaluate expression="business.getSpielEinstellungen()" result="flowScope.spieleinstellungen"/>
        </transition>

        <transition on="spielsteuerung" to="spielsteuerung"/>

        <transition on="kategorien_m" to="kategorien">
            <evaluate expression="business.getKategorienMList()" result="flowScope.kategorien"/>
        </transition>

        <transition on="kategorien_k" to="kategorien">
            <evaluate expression="business.getKategorienKList()" result="flowScope.kategorien"/>
        </transition>

        <transition on="speaker" to="speaker_reload_action"/>

        <transition on="spiel_start" to="spiel_start">
            <evaluate expression="business.getSpielEinstellungen()" result="flowScope.spieleinstellungen"/>
        </transition>

        <transition on="eintrager" to="eintrager">
            <evaluate expression="spielRepositoryDelegate.findAllEinzutragende()" result="flowScope.einzutragende"/>
        </transition>

        <transition on="kontrollierer" to="kontrollierer">
            <evaluate expression="spielRepositoryDelegate.findAllZuBestaetigen()" result="flowScope.bestaetigen"/>
        </transition>

        <transition on="to_sessions" to="liste_sessions">
            <evaluate expression="webSessionLogRepository.findAll()" result="flowScope.sessions"/>
        </transition>

        <transition on="webcam" to="webcam">

        </transition>

    </global-transitions>

</flow>